import Head from 'next/head';
import { Container } from '@mui/material';
import ReactMarkdown from 'react-markdown';
import remarkGfm from 'remark-gfm';
import { getPostByTitle, getPosts } from '../../lib/api';
import type { FC, ReactElement } from 'react';

interface IProps {
  post: {
    title: string;
    contentMd: string;
  };
}

const Post: FC<IProps> = ({ post: { title, contentMd } }): ReactElement => {
  return (
    <>
      <Head>
        <title>{title}</title>
        <meta name='description' content='Generated by create next app' />
        <link rel='icon' href='/favicon.ico' />
      </Head>
      <Container maxWidth='lg'>
        <ReactMarkdown remarkPlugins={[remarkGfm]} className='markdown-body'>
          {contentMd}
        </ReactMarkdown>
      </Container>
    </>
  );
};

export default Post;

export async function getStaticProps({ params }: Record<string, any>) {
  const contentMd = getPostByTitle(params.title);

  return {
    props: {
      post: {
        title: params.title,
        contentMd,
      },
    },
  };
}

export async function getStaticPaths() {
  const posts = getPosts();

  return {
    paths: posts.map(post => ({
      params: {
        title: post.title,
      },
    })),
    fallback: false,
  };
}
